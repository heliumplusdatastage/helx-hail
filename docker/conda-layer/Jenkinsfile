pipeline {
    agent { label 'agent-docker' }
    environment {
        DOCKERHUB_CREDS = credentials("${env.REGISTRY_CREDS_ID_STR}")
        REGISTRY = "${env.DOCKER_REGISTRY}"
        REG_OWNER="helxplatform"
        REG_APP="conda-layer"
	COMMIT_HASH="${sh(script:"git rev-parse --short HEAD", returnStdout: true).trim()}"
        IMAGE_NAME="${REG_OWNER}/${REG_APP}"
        TAG1="$BRANCH_NAME"
        TAG2="$COMMIT_HASH"
    }
    stages {
        stage('Build') {
            steps {
                    sh '''
                    echo "Build stage"
                    cd docker/conda-layer
                    python ../xform.py Dockerfile.jinja $BRANCH_NAME
                    docker build --no-cache -t $IMAGE_NAME:$TAG1 -t $IMAGE_NAME:$TAG2 -f Dockerfile.$BRANCH_NAME .
                    '''
            }
        }
        stage('Test') {
            steps {
                sh '''
                echo "Test stage"
                '''
            }
        }
        stage('Publish') {
            steps {
                sh '''
                echo "Publish stage"
                echo "$DOCKERHUB_CREDS_PSW" > p.txt
                chmod 600 p.txt
                cat p.txt | docker login -u $DOCKERHUB_CREDS_USR --password-stdin $REGISTRY
                docker push $IMAGE_NAME:$TAG1
                docker push $IMAGE_NAME:$TAG2
                '''
            }
            post {
                success {
                    build propagate: false, job: "hail-helx/${env.BRANCH_NAME}"
                }
            }
        }
    }
}
